rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================================
    // HELPER FUNCTIONS
    // ============================================================
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isParticipant(participants) {
      return isAuthenticated() && request.auth.uid in participants;
    }
    
    // ============================================================
    // COLLECTION: users
    // ============================================================
    // Quản lý thông tin người dùng
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // ============================================================
    // COLLECTION: messages  
    // ============================================================
    // Tin nhắn thống nhất cho room và direct chat
    // Security chính ở app layer (kiểm tra membership, block status)
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.uid;
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && 
        request.auth.uid == resource.data.uid;
    }

    // ============================================================
    // COLLECTION: rooms
    // ============================================================
    // Phòng chat nhóm - chỉ members truy cập
    match /rooms/{roomId} {
      allow read: if isAuthenticated() && 
        request.auth.uid in resource.data.members;
      allow create: if isAuthenticated() && 
        request.auth.uid in request.resource.data.members;
      allow update: if isAuthenticated() && (
        request.auth.uid in resource.data.members ||
        request.auth.uid in request.resource.data.members
      );
      allow delete: if isAuthenticated() && 
        request.auth.uid == resource.data.admin;
    }

    // ============================================================
    // COLLECTION: conversations
    // ============================================================
    // Chat trực tiếp 1-1 - chỉ 2 participants truy cập
    match /conversations/{conversationId} {
      allow read: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
      allow create: if isAuthenticated() && 
        request.auth.uid in request.resource.data.participants &&
        request.resource.data.participants.size() == 2;
      allow update: if isAuthenticated() && (
        request.auth.uid in resource.data.participants ||
        request.auth.uid in request.resource.data.participants
      );
      allow delete: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
    }

    // ============================================================
    // COLLECTION: friends
    // ============================================================
    // Quan hệ bạn bè - format: userId1_userId2 (sorted)
    match /friends/{friendId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.auth.uid in request.resource.data.participants &&
        request.resource.data.participants.size() == 2;
      allow delete: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
    }

    // ============================================================
    // COLLECTION: friend_requests
    // ============================================================
    // Lời mời kết bạn
    match /friend_requests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.from &&
        request.resource.data.from != request.resource.data.to &&
        request.resource.data.status == 'pending';
      allow update: if isAuthenticated() && (
        (request.auth.uid == resource.data.from && 
         resource.data.status == 'pending' &&
         request.resource.data.status == 'cancelled') ||
        (request.auth.uid == resource.data.to && 
         resource.data.status == 'pending' &&
         request.resource.data.status in ['accepted', 'declined'])
      );
      allow delete: if isAuthenticated() && (
        request.auth.uid == resource.data.from || 
        request.auth.uid == resource.data.to
      );
    }

    // ============================================================
    // COLLECTION: blocked_users
    // ============================================================
    // Người dùng bị chặn
    match /blocked_users/{blockId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.blocker &&
        request.resource.data.blocker != request.resource.data.blocked;
      allow delete: if isAuthenticated() && 
        request.auth.uid == resource.data.blocker;
    }

    // ============================================================
    // COLLECTION: votes
    // ============================================================
    // Bình chọn trong phòng chat
    match /votes/{voteId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.creatorId &&
        request.resource.data.votes.size() == 0;
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && 
        request.auth.uid == resource.data.creatorId;
    }

    // ============================================================
    // COLLECTION: archived_chats
    // ============================================================
    // Chat đã lưu trữ - format: userId_chatId
    match /archived_chats/{archiveId} {
      allow read: if isAuthenticated() && (
        archiveId.matches(request.auth.uid + '_.*') ||
        (resource != null && request.auth.uid == resource.data.userId)
      );
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
      allow delete: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
    }
  }
}
